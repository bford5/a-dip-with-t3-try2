import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import { useState } from "react";

import { useUser, SignOutButton } from "@clerk/nextjs";

import HomepageReviews from "~/components/page components/HomepageReviews.cmp";

// import { SignInButton } from "@clerk/nextjs";

import { api } from "~/utils/api";

const Home: NextPage = () => {
  const { user, isSignedIn } = useUser();
  // NOTE: useUser() returns an object with the following properties: {isLoading, isSignedIn, user{...}}
  // so if access desired to user{} then you need to do user.user or destructure it off
  const { data, isLoading } = api.posts.getAll.useQuery();

  // const [postAuthor, setPostAuthor] = useState("");
  const [postContent, setPostContent] = useState("");

  // console.log(user?.firstName);
  // console.log(user?.profileImageUrl);
  // console.log(user?.id);

  return (
    <>
      <Head>
        <title>a dip with T3</title>
        {/* <meta name="description" content="Generated by create-t3-app" /> */}
        {/* <link rel="icon" href="/favicon.ico" /> */}
      </Head>
      <section className=" mx-auto w-5/6 rounded-xl bg-slate-500">
        <div className="mt-2 h-1/5 min-h-min">
          <h1 className=" py-4 text-center">HOMEPAGE</h1>
          {isSignedIn ? (
            <>
              <h2 className="py-2 text-center">
                hello <span className="underline">{user.fullName}</span>
              </h2>
            </>
          ) : (
            <></>
          )}
          <div className=" customBtns mx-auto grid w-1/2 grid-cols-2 gap-4">
            {!isSignedIn ? (
              <>
                <Link
                  href={`/sign-up`}
                  className=" col-span-1 mb-2 rounded-sm bg-red-400 px-2 py-3 text-center"
                >
                  Sign Up
                </Link>
                <Link
                  href={`/sign-in`}
                  className=" col-span-1 mb-2 rounded-sm bg-red-400 px-2 py-3 text-center"
                >
                  Sign In
                </Link>
              </>
            ) : (
              <div className=" col-span-2 mb-2 rounded-sm bg-red-400 px-2 py-3 text-center">
                <SignOutButton />
              </div>
            )}
          </div>
          {isSignedIn ? (
            <div className="createPost mx-auto flex w-11/12 flex-col px-2 py-4 text-white ">
              <h2 className="pb-3 pt-1 text-center">
                Author: {user.firstName}
              </h2>
              <form className=" flex flex-row">
                <textarea
                  className=" bg-red h-20 w-80 grow rounded-xl bg-lime-700/30 py-2 text-center outline-none"
                  rows={4}
                  value={postContent}
                  onChange={(e) => setPostContent(e.target.value)}
                  placeholder="Post Content"
                ></textarea>
                <button
                  type="submit"
                  className=" mt-2 w-20 rounded-md bg-yellow-500/80 text-slate-200 duration-1000 hover:bg-yellow-700/80 hover:text-slate-300 hover:transition-colors"
                >
                  Post
                </button>
              </form>
            </div>
          ) : (
            <></>
          )}
          <div className="postsRow my-4 rounded-md bg-zinc-600 px-4 py-3 text-yellow-600">
            {isLoading === false ? (
              <HomepageReviews data={data} />
            ) : (
              <div className=" py-10 text-center">Loading ... </div>
            )}
            {/* <HomepageReviews data={data} /> */}
          </div>
        </div>
      </section>
    </>
  );
};

export default Home;
